---
- name: Creating a workspace on Bastion
  hosts: bastion 
  gather_facts: no
  tasks:

    - name: Erasing dnsmasq lease
      file:
        path: /var/lib/dnsmasq/dnsmasq.leases
        state: absent
      become: true

    - name: Creating workspace
      file:
        state: directory
        path: "{{ item }}"
      loop: 
        - "{{ workspace_directory.base_path }}/{{ workspace_directory.config_dir }}"
        - "~/.ssh"

    - name: Creating ssh keys if not exists
      openssh_keypair:
        path: "~/.ssh/id_rsa"

    - name: Creating tftpboot and nginx workspace
      file:
        state: directory
        path: "{{ item }}"
      loop: 
        - "{{ tftp_boot_root }}/{{ tftp_workspace_dir }}"
        - "{{ nginx_document_root }}/{{ nginx_workspace_dir }}"
      become: True

    - name: Downloading Openshift installer and CLI
      unarchive:
        src: "{{ item }}"
        dest: /usr/local/bin
        remote_src: yes
      become: True
      loop:
        - "{{ downloads.ocp.base_url + downloads.ocp.ocp_oc_cli }}"
        - "{{ downloads.ocp.base_url + downloads.ocp.ocp_installer }}"
      when: not (skip_download | bool)
      
    - name: Checking for openshift-install tool
      command: openshift-install version
      register: output
      failed_when: output.rc !=0

    - name: Checking for OCP cli tool
      command: oc
      register: output
      failed_when: output.rc !=0

    - block:
        - name: Download initramfs and kernel 
          get_url:
            url: "{{ downloads.rhcos.base_url + item }}"
            dest: "{{ tftp_boot_root }}/{{ tftp_workspace_dir }}/{{ item }}"
          loop:
            - "{{ downloads.rhcos.initramfs }}"
            - "{{ downloads.rhcos.kernel }}"
      

        - name: Download Red Hat CoreOS for bare metal
          get_url:
            #url:  "{{ downloads.rhcos.base_url + downloads.rhcos.coreos }}"
            url:  "{{ downloads.rhcos.base_url + downloads.rhcos.rootfs }}"
            #dest: "{{ nginx_document_root }}/{{ nginx_workspace_dir }}/{{ downloads.rhcos.coreos }}"
            dest: "{{ nginx_document_root }}/{{ nginx_workspace_dir }}/{{ downloads.rhcos.rootfs }}"
      when: not (skip_download | bool)
      become: true
